{"version":3,"sources":["components/RestDayCell.js","components/ScheduleCell.js","utils/config.js","components/Modal.js","components/Calnerdar.js","utils/api.js","store/calendar.js","container/CalendarContainer.js","App.js","store/index.js","index.js"],"names":["Styled","RestDay","styled","div","RestDayCell","props","restDayList","year","month","day","map","info","index","targetDay","length","String","locdate","className","dateName","Schedule","ScheduleCell","scheduleList","onClickShowModal","item","title","date","scheduleDate","onClick","e","type","ADD","DELETE","Modal","isModalShow","onClickModalBtn","onChangeInputVal","cx","config","icon","faTimes","size","name","placeholder","value","onChange","readOnly","Calender","CalnerdarPresenter","todayFull","dateList","changeMonth","clickTodayBtn","handleSchedule","useSelector","state","calendar","data","reducerData","schedule_item_list","faChevronLeft","faChevronRight","days","formatYear","format","formatMonth","formatDay","instance","axios","create","baseURL","params","ServiceKey","api","getRestDay","a","console","log","get","response","body","items","UPDATE_SCHEDULE","updateScheduleData","formData","dispatch","payload","handleActions","produce","draft","push","filter","_","Number","deleteTarget","CalendarContainer","calendarState","moment","deleteTargetIndex","useDispatch","useImmer","values","setValues","prams","solYear","solMonth","restDays","preventDefault","CalendarActions","useEffect","firstWeek","clone","startOf","week","lastWeek","endOf","oneWeek","Array","fill","add","getDayArray","subtract","clickedId","target","dataset","resulet","App","basename","exact","path","element","combineReducers","store","applyMiddleware","promiseMiddlerware","reduxThunk","createStore","createStoreWithMiddleware","calenderReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8ce2e13.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction RestDayCell(props) {\r\n  const { restDayList = [], year = \"\", month = \"\", day = \"\" } = props;\r\n  return restDayList.map((info, index) => {\r\n    let targetDay = day.length < 2 ? `0${day}` : day;\r\n    return `${year}${month}${targetDay}` === String(info.locdate) ? (\r\n      <Styled.RestDay>\r\n        <span key={String(index)} className=\"calendar-restday\">\r\n          {info.dateName}\r\n        </span>\r\n      </Styled.RestDay>\r\n    ) : null;\r\n  });\r\n}\r\n\r\nconst Styled = {\r\n  RestDay: styled.div`\r\n    .calendar-restday {\r\n      display: block;\r\n      margin-bottom: 1.5px;\r\n      text-align: left;\r\n      background-color: #ffcdd2;\r\n      border-radius: 5px;\r\n    }\r\n  `,\r\n};\r\n\r\nexport default RestDayCell;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction ScheduleCell(props) {\r\n  const {\r\n    scheduleList = [],\r\n    year = \"\",\r\n    month = \"\",\r\n    day = \"\",\r\n    onClickShowModal = () => {},\r\n  } = props;\r\n\r\n  return scheduleList.map((item, index) => {\r\n    const title = item.title;\r\n    const date = item.scheduleDate;\r\n    return `${year}-${month}-${day}` === date ? (\r\n      <Styled.Schedule>\r\n        <span\r\n          key={String(index)}\r\n          className=\"calendar-schedule\"\r\n          onClick={(e) => onClickShowModal({ e: e, type: \"delete\" })}\r\n          data-index={index}\r\n        >\r\n          {title}\r\n        </span>\r\n      </Styled.Schedule>\r\n    ) : null;\r\n  });\r\n}\r\n\r\nconst Styled = {\r\n  Schedule: styled.div`\r\n    .calendar-schedule {\r\n      display: block;\r\n      margin-bottom: 1.5px;\r\n      margin-botton: 2px;\r\n      text-align: left;\r\n      background-color: #81d4fa;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n};\r\n\r\nexport default ScheduleCell;\r\n","export const PREV_MONTH = \"prev\";\r\nexport const NEXT_MONTH = \"next\";\r\nexport const ADD = \"add\";\r\nexport const DELETE = \"delete\";\r\nexport const CLOSE = \"close\";\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport cx from \"classnames\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as config from \"../utils/config\";\r\n\r\nfunction Modal(props) {\r\n  const {\r\n    type = \"\",\r\n    title = \"\",\r\n    scheduleDate = \"\",\r\n    isModalShow = false,\r\n    onClickModalBtn = () => {},\r\n    onChangeInputVal = () => {},\r\n  } = props;\r\n\r\n  return (\r\n    <Styled.Modal>\r\n      <div className={cx(\"modal\", isModalShow ? \"show\" : \"\")}>\r\n        <div className=\"modal-container\">\r\n          <section className=\"modal-header\">\r\n            <div className=\"modal-title\">\r\n              {type === config.ADD ? \"일정 추가\" : \"일정 삭제\"}\r\n            </div>\r\n            <div className=\"modal-close\">\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                size=\"lg\"\r\n                onClick={(e) => onClickModalBtn({ e: e, type: config.CLOSE })}\r\n              />\r\n            </div>\r\n          </section>\r\n          <section>\r\n            <form>\r\n              <div className=\"modal-content\">\r\n                <span className=\"modal-label\">제목</span>\r\n                <input\r\n                  className=\"modal-input\"\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  placeholder=\"일정을 입력해 주세요.\"\r\n                  value={title}\r\n                  onChange={onChangeInputVal}\r\n                  readOnly={type === config.DELETE}\r\n                />\r\n                <span className=\"modal-label\">날짜</span>\r\n                <input\r\n                  className=\"modal-input\"\r\n                  type=\"text\"\r\n                  name=\"scheduleDate\"\r\n                  placeholder=\"yyyy-mm-dd\"\r\n                  value={scheduleDate}\r\n                  onChange={onChangeInputVal}\r\n                  readOnly={type === config.DELETE}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                {type === config.ADD ? (\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"modal-btn\"\r\n                    onClick={(e) => onClickModalBtn({ e: e, type: config.ADD })}\r\n                  >\r\n                    추가\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"modal-btn\"\r\n                    onClick={(e) =>\r\n                      onClickModalBtn({ e: e, type: config.DELETE })\r\n                    }\r\n                  >\r\n                    삭제\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </Styled.Modal>\r\n  );\r\n}\r\n\r\nconst Styled = {\r\n  Modal: styled.div`\r\n    .modal {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      display: none;\r\n      background-color: rgba(0, 0, 0, 0.4);\r\n    }\r\n    .modal-container {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      width: 350px;\r\n      height: 200px;\r\n      padding: 40px;\r\n      text-align: center;\r\n      background-color: rgb(255, 255, 255);\r\n      border-radius: 10px;\r\n      box-shadow: 0 2px 3px 0 rgba(34, 36, 38, 0.15);\r\n      transform: translateX(-50%) translateY(-50%);\r\n    }\r\n    .show {\r\n      display: block;\r\n    }\r\n    .modal-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-bottom: 20px;\r\n    }\r\n    .modal-close {\r\n      cursor: pointer;\r\n    }\r\n    .modal-title {\r\n      display: flex;\r\n      margin-bottom: 10px;\r\n      font-size: 24px;\r\n      font-weight: bold;\r\n    }\r\n    .modal-content {\r\n      display: grid;\r\n      grid-template-columns: 1fr 2fr;\r\n      grid-gap: 10px;\r\n      margin-bottom: 20px;\r\n    }\r\n    .modal-input {\r\n      padding: 6px 12px;\r\n      font-size: 12px;\r\n      line-height: 1.42857143;\r\n      color: #555;\r\n      background-color: #fff;\r\n      background-image: none;\r\n      border: 1px solid #ccc;\r\n      border-radius: 4px;\r\n    }\r\n    .modal-btn {\r\n      padding: 6px 12px;\r\n      margin-bottom: 0;\r\n      font-size: 14px;\r\n      font-weight: 400;\r\n      line-height: 1.42857143;\r\n      text-align: center;\r\n      white-space: nowrap;\r\n      vertical-align: middle;\r\n      background: #1a1f27;\r\n      color: #fff;\r\n      border: 1px solid transparent;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport cx from \"classnames\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronRight,\r\n  faChevronLeft,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport RestDayCell from \"./RestDayCell\";\r\nimport ScheduleCell from \"./ScheduleCell\";\r\nimport Modal from \"./Modal\";\r\n\r\nfunction CalnerdarPresenter(props) {\r\n  const DAY = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n  const {\r\n    year = \"\",\r\n    month = \"\",\r\n    todayFull = \"\",\r\n    isModalShow = false,\r\n    type = \"\",\r\n    dateList = [],\r\n    restDayList = [],\r\n    title = \"\",\r\n    scheduleDate = \"\",\r\n    changeMonth = () => {},\r\n    clickTodayBtn = () => {},\r\n    onClickShowModal = () => {},\r\n    onClickModalBtn = () => {},\r\n    handleSchedule = () => {},\r\n    onChangeInputVal = () => {},\r\n  } = props;\r\n\r\n  const { data = {} } = useSelector((state) => state.calendar);\r\n  const reducerData = {\r\n    scheduleList: data.schedule_item_list || [],\r\n  };\r\n\r\n  return (\r\n    <Styled.Calender>\r\n      <section className=\"calendar-header\">\r\n        <div className=\"header-right\">\r\n          <p>\r\n            {year}년 {month}월\r\n          </p>\r\n        </div>\r\n        <div className=\"header-left\">\r\n          <button\r\n            className=\"header-btn\"\r\n            onClick={(e) => onClickShowModal({ e: e, type: \"add\" })}\r\n          >\r\n            일정 추가\r\n          </button>\r\n          <button className=\"header-btn\" onClick={() => changeMonth(\"prev\")}>\r\n            <FontAwesomeIcon icon={faChevronLeft} />\r\n          </button>\r\n          <button className=\"header-btn\" onClick={clickTodayBtn}>\r\n            오늘\r\n          </button>\r\n          <button className=\"header-btn\" onClick={() => changeMonth(\"next\")}>\r\n            <FontAwesomeIcon icon={faChevronRight} />\r\n          </button>\r\n        </div>\r\n      </section>\r\n      <section className=\"calendar-body\">\r\n        <div className=\"calendar-body-header\">\r\n          <ul className=\"calendar-days\">\r\n            {DAY.map((item, index) => (\r\n              <li key={String(index)} className=\"calendar-day\">\r\n                {item}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"calendar-body-main\">\r\n          <table className=\"calendar-table\">\r\n            <tbody>\r\n              {dateList.map((days, index) => (\r\n                <tr key={index}>\r\n                  {days.map((day) => {\r\n                    let formatYear = day.format(\"YYYY\");\r\n                    let formatMonth = day.format(\"MM\");\r\n                    let formatDay = day.format(\"DD\");\r\n                    return (\r\n                      <td key={String(day)} className=\"calendar-table-td\">\r\n                        <span\r\n                          className={cx(\r\n                            \"table-day\",\r\n                            todayFull ===\r\n                              `${formatYear}${formatMonth}${formatDay}`\r\n                              ? \"active\"\r\n                              : \"\",\r\n                            formatMonth !== month ? \"day-to-gray\" : \"\"\r\n                          )}\r\n                        >\r\n                          {formatDay}\r\n                        </span>\r\n                        {restDayList.length && restDayList.length > 0 && (\r\n                          <RestDayCell\r\n                            restDayList={restDayList}\r\n                            year={formatYear}\r\n                            month={formatMonth}\r\n                            day={formatDay}\r\n                          />\r\n                        )}\r\n                        {reducerData.scheduleList &&\r\n                          reducerData.scheduleList.length > 0 && (\r\n                            <ScheduleCell\r\n                              scheduleList={reducerData.scheduleList}\r\n                              year={formatYear}\r\n                              month={formatMonth}\r\n                              day={formatDay}\r\n                              onClickShowModal={onClickShowModal}\r\n                            />\r\n                          )}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        {isModalShow && (\r\n          <Modal\r\n            type={type}\r\n            title={title}\r\n            scheduleDate={scheduleDate}\r\n            isModalShow={isModalShow}\r\n            onClickModalBtn={onClickModalBtn}\r\n            handleSchedule={handleSchedule}\r\n            onChangeInputVal={onChangeInputVal}\r\n          />\r\n        )}\r\n      </section>\r\n    </Styled.Calender>\r\n  );\r\n}\r\n\r\nconst Styled = {\r\n  Calender: styled.div`\r\n    margin: 15px;\r\n    .calendar-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n    .header-right {\r\n      font-size: 24px;\r\n      font-weight: bold;\r\n    }\r\n    .header-btn:not(:last-child) {\r\n      margin-right: 10px;\r\n    }\r\n    .calendar-days {\r\n      display: flex;\r\n      padding: 0px;\r\n      list-style: none;\r\n    }\r\n    .calendar-day {\r\n      width: calc(100% / 7);\r\n      text-align: center;\r\n      border: 1px solid;\r\n    }\r\n    .calendar-table {\r\n      width: 100%;\r\n    }\r\n    .calendar-table-td {\r\n      width: calc(100% / 7);\r\n      height: 110px;\r\n      text-align: right;\r\n      vertical-align: top;\r\n      padding: 5px;\r\n      border: 1px solid;\r\n    }\r\n    .active {\r\n      display: inline-block;\r\n      background-color: #f72525;\r\n      border-radius: 100%;\r\n      width: 25px;\r\n      height: 25px;\r\n      color: #fff;\r\n      font-weight: bolder;\r\n      text-align: center;\r\n    }\r\n    .table-day {\r\n      font-weight: 700;\r\n    }\r\n    .day-to-gray {\r\n      color: #bdbdbd;\r\n    }\r\n  `,\r\n};\r\n\r\nexport default CalnerdarPresenter;\r\n","import axios from \"axios\";\r\n\r\nconst END_POINT =\r\n  \"http://apis.data.go.kr/B090041/openapi/service/SpcdeInfoService\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: `${END_POINT}`,\r\n  params: {\r\n    ServiceKey:\r\n      \"SctdocqFvY7Uflm+c7p3q7XjSzDLgxzIjoD6a9Vx34cY+UVOGROQjZk0HRcAPYcclf2J1iJWLKdDclCiYmzMGQ==\",\r\n  },\r\n});\r\n\r\nconst api = {\r\n  getRestDay: async (data) => {\r\n    console.log(\"call api\");\r\n    const {\r\n      data: {\r\n        response: {\r\n          body: {\r\n            items: { item },\r\n          },\r\n        },\r\n      },\r\n    } = await instance.get(`/getRestDeInfo`, { params: data });\r\n\r\n    return item;\r\n  },\r\n};\r\n\r\nexport default api;\r\n","import { handleActions } from \"redux-actions\";\r\nimport produce from \"immer\";\r\nimport * as config from \"../utils/config\";\r\n\r\nconst UPDATE_SCHEDULE = \"calendar/UPDATE_SCHEDULE\";\r\n\r\nconst initialState = {\r\n  data: {\r\n    schedule_item_list: [],\r\n  },\r\n};\r\n\r\n// NOTE: 스케쥴 업데이트\r\nexport const updateScheduleData = (formData, type) => (dispatch) => {\r\n  const reducerData = {\r\n    type: type,\r\n    formData: formData,\r\n  };\r\n  dispatch({ type: UPDATE_SCHEDULE, payload: reducerData });\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [UPDATE_SCHEDULE]: (state, { payload }) => {\r\n      return produce(state, (draft) => {\r\n        try {\r\n          if (payload.type === config.ADD) {\r\n            draft.data.schedule_item_list.push(payload.formData);\r\n          } else if (payload.type === config.DELETE) {\r\n            draft.data.schedule_item_list =\r\n              state.data.schedule_item_list.filter(\r\n                (_, index) => index !== Number(payload.formData.deleteTarget)\r\n              );\r\n          }\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      });\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useImmer } from \"use-immer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Calendar from \"../components/Calnerdar\";\r\nimport api from \"../utils/api\";\r\nimport * as config from \"../utils/config\";\r\nimport * as CalendarActions from \"../store/calendar\";\r\n\r\nfunction CalendarContainer() {\r\n  const calendarState = {\r\n    year: moment().format(\"YYYY\"),\r\n    month: moment().format(\"MM\"),\r\n    todayFull: moment().format(\"YYYYMMDD\"),\r\n    moment: moment(),\r\n    title: \"\",\r\n    scheduleDate: \"\",\r\n    type: \"\",\r\n    deleteTargetIndex: \"\",\r\n    dateList: [],\r\n    restDayList: [],\r\n    isModalShow: false,\r\n  };\r\n  const dispatch = useDispatch();\r\n  const { data = {} } = useSelector((state) => state.calendar);\r\n  const reducerData = {\r\n    scheduleList: data.schedule_item_list || [],\r\n  };\r\n  const [values, setValues] = useImmer(calendarState);\r\n\r\n  // 날짜 리스트 취득\r\n  const getDayArray = () => {\r\n    const firstWeek = values.moment.clone().startOf(\"month\").week();\r\n    const lastWeek =\r\n      values.moment.clone().endOf(\"month\").week() === 1\r\n        ? 53\r\n        : values.moment.clone().endOf(\"month\").week();\r\n    let dateList = [];\r\n\r\n    for (let week = firstWeek; week <= lastWeek; week++) {\r\n      let oneWeek = Array(7)\r\n        .fill(true)\r\n        .map((_, index) => {\r\n          let day = values.moment\r\n            .clone()\r\n            .startOf(\"year\")\r\n            .week(week)\r\n            .startOf(\"week\")\r\n            .add(index, \"day\");\r\n          return day;\r\n        });\r\n      dateList.push(oneWeek);\r\n    }\r\n    setValues((draft) => {\r\n      draft.dateList = dateList;\r\n    });\r\n  };\r\n\r\n  //공휴일 정보 취득\r\n  const getRestDay = async () => {\r\n    const prams = {\r\n      solYear: values.year,\r\n      solMonth: values.month,\r\n    };\r\n    const restDays = await api.getRestDay(prams);\r\n    if (restDays) {\r\n      setValues((draft) => {\r\n        draft.restDayList = restDays.length > 0 ? restDays : [restDays];\r\n      });\r\n    }\r\n  };\r\n\r\n  //달 변경\r\n  const changeMonth = (type) => {\r\n    if (type === config.PREV_MONTH) {\r\n      setValues((draft) => {\r\n        draft.year = moment(`${values.year}${values.month}`)\r\n          .subtract(1, \"months\")\r\n          .format(\"YYYY\");\r\n        draft.month = moment(`${values.year}${values.month}`)\r\n          .subtract(1, \"months\")\r\n          .format(\"MM\");\r\n        draft.moment = moment(`${values.year}${values.month}`).subtract(\r\n          1,\r\n          \"months\"\r\n        );\r\n      });\r\n    } else if (type === config.NEXT_MONTH) {\r\n      setValues((draft) => {\r\n        draft.year = moment(`${values.year}${values.month}`)\r\n          .clone()\r\n          .add(1, \"months\")\r\n          .format(\"YYYY\");\r\n        draft.month = moment(`${values.year}${values.month}`)\r\n          .clone()\r\n          .add(1, \"months\")\r\n          .format(\"MM\");\r\n        draft.moment = moment(`${values.year}${values.month}`)\r\n          .clone()\r\n          .add(1, \"months\");\r\n      });\r\n    }\r\n  };\r\n\r\n  // 일정 등록 onChange\r\n  const onChangeInputVal = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues((draft) => {\r\n      draft[name] = value;\r\n    });\r\n  };\r\n\r\n  //오늘로 이동\r\n  const clickTodayBtn = () => {\r\n    setValues((draft) => {\r\n      draft.year = moment().format(\"YYYY\");\r\n      draft.month = moment().format(\"MM\");\r\n      draft.moment = moment();\r\n    });\r\n  };\r\n\r\n  //일정추가\r\n  const onClickShowModal = ({ e, type }) => {\r\n    const clickedId = e.target.dataset.index;\r\n    setValues((draft) => {\r\n      draft.isModalShow = !values.isModalShow;\r\n      draft.type = type;\r\n    });\r\n    if (type === config.ADD) {\r\n      setValues((draft) => {\r\n        draft.title = \"\";\r\n        draft.scheduleDate = \"\";\r\n      });\r\n    } else if (type === config.DELETE) {\r\n      const resulet = reducerData.scheduleList.filter(\r\n        (_, index) => index === Number(clickedId)\r\n      );\r\n      setValues((draft) => {\r\n        draft.title = resulet[0].title;\r\n        draft.scheduleDate = resulet[0].scheduleDate;\r\n        draft.deleteTargetIndex = clickedId;\r\n      });\r\n    }\r\n  };\r\n\r\n  //모달 버튼\r\n  const onClickModalBtn = async ({ e, type }) => {\r\n    if (type === \"close\") {\r\n      setValues((draft) => {\r\n        draft.isModalShow = !values.isModalShow;\r\n      });\r\n    } else if (type === \"add\") {\r\n      e.preventDefault();\r\n      const formData = {\r\n        title: values.title,\r\n        scheduleDate: values.scheduleDate,\r\n      };\r\n      await dispatch(CalendarActions.updateScheduleData(formData, type));\r\n      setValues((draft) => {\r\n        draft.isModalShow = !values.isModalShow;\r\n        draft.title = \"\";\r\n        draft.scheduleDate = \"\";\r\n      });\r\n    } else if (type === \"delete\") {\r\n      e.preventDefault();\r\n      const formData = {\r\n        deleteTarget: values.deleteTargetIndex,\r\n      };\r\n      await dispatch(CalendarActions.updateScheduleData(formData, type));\r\n      setValues((draft) => {\r\n        draft.isModalShow = !values.isModalShow;\r\n        draft.title = \"\";\r\n        draft.scheduleDate = \"\";\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDayArray();\r\n    getRestDay();\r\n  }, [values.month, data]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <Calendar\r\n      {...values}\r\n      changeMonth={changeMonth}\r\n      clickTodayBtn={clickTodayBtn}\r\n      onClickShowModal={onClickShowModal}\r\n      onClickModalBtn={onClickModalBtn}\r\n      onChangeInputVal={onChangeInputVal}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CalendarContainer;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Calndar from \"./container/CalendarContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename=\"react-calendar/\">\n        <Routes>\n          <Route exact path=\"/\" element={<Calndar />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport calendar from \"./calendar\";\r\n\r\nexport default combineReducers({\r\n  calendar,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport promiseMiddlerware from \"redux-promise\";\nimport reduxThunk from \"redux-thunk\";\nimport App from \"./App\";\nimport calenderReducer from \"./store\";\n\nconst createStoreWithMiddleware = applyMiddleware(\n  promiseMiddlerware,\n  reduxThunk\n)(createStore);\n\nconst store = createStoreWithMiddleware(\n  calenderReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}